{% extends "layout/command.md.jinja" %}
{% block command %}{{ command }}{% endblock %}
{% block content %}
What is it for?
---
Using `git init` will allow you to manipulate the specified directory with `git`. 


Example 1 : No options, default values.
---
```
{%- for item in example['1'] %}
{{ item }}
{%- endfor %}
```

Here we first create a directory called `project1`. This will be our new git repository. We make `project1` the current directory by running the `cd` command. Next we create an empty file called `Makefile`. 

Adding the file to git results in an error. Checking the git status also results in an error. The important bit is `not a git repository`. This tells us that you can run `add` and `status` only in a git repository.

The command `git init` makes it a git repository. Since we did not specify any directory or any options, it will process the current directory.

We can then run `git status` and `git add` and it will behave as expected.

Example 2 : --template \<template-directory>
---
```
{%- for item in example['2'] %}
{{ item }}
{%- endfor %}
```

The `--template` option allows you to specify a directory that will be used as a template for the files in the `.git` directory. The content of the directory will be merged with the contents of git's default template directory.

In the example above, the default value of the `.git/config` file does not contain a `core.editor` value and the `core.logallrefupdates` is set to `true`.

{% endblock %}